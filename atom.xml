<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://git.zblogs.top</id>
    <title>Justin写字的地方</title>
    <updated>2022-01-16T00:16:52.388Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://git.zblogs.top"/>
    <link rel="self" href="https://git.zblogs.top/atom.xml"/>
    <subtitle>小贾的个人博客网站</subtitle>
    <logo>https://git.zblogs.top/images/avatar.png</logo>
    <icon>https://git.zblogs.top/favicon.ico</icon>
    <rights>All rights reserved 2022, Justin写字的地方</rights>
    <entry>
        <title type="html"><![CDATA[[教程] GitHub Pages+Gridea搭建静态博客网站]]></title>
        <id>https://git.zblogs.top/post/github-pages-gridea-guide/</id>
        <link href="https://git.zblogs.top/post/github-pages-gridea-guide/">
        </link>
        <updated>2022-01-08T12:40:44.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h2 id="写在前面">写在前面</h2>
<p>WordPress 固然很受欢迎，但它并非是搭建博客网站的唯一选择。假若你目前并不打算付费购买服务器托管自己的网站，那通过 GitHub + Gridea 的方式来搭建一个免费的静态博客网站也不失为一个比较好的选择。</p>
</blockquote>
<p>本文将逐步讲解如何从零开始通过 GitHub Pages+Gridea 的方式搭建一个静态博客网站。在认真读完这份文档教程后，即使是纯小白用户也可以自己动手搭建起一个静态博客网站。</p>
<h2 id="为什么要使用-github-pages">为什么要使用 GitHub Pages</h2>
<p>GitHub pages 是 GitHub 免费提供的一个轻量级个人博客服务。对于小白用户而言，它有以下一些优势：</p>
<ul>
<li>免费试用，可省下一笔云服务开支；</li>
<li>创建Github pages 的步骤简单，对小白用户比较友好；</li>
<li>提供自定义域名，一键开启 HTTPS 等功能；</li>
<li>每月带宽使用上限100GB，对个人博客网站而言完全够用；</li>
<li>无需要操心系统维护，可以专注于文章创作；</li>
</ul>
<p>不过除了以上这些显而易见的优势外，GitHub 作为一项免费服务，也存在一些限制和不足：</p>
<ul>
<li>在使用时项目和网站大小不要超过1GB；</li>
<li>不要过于频繁地更新网站内容（每小时不超过10个版本）；</li>
<li>GitHub 服务器节点在美国，网站访问速度上没有优势可言；</li>
</ul>
<h2 id="为什么要使用-gridea">为什么要使用 Gridea</h2>
<p>对于小白而言，使用 GitHub 仓库来管理和推送文章相对比较麻烦。使用 Gridea 这款静态博客写作客户端工具，可以让我们更专注于创作。</p>
<hr>
<h2 id="搭建步骤">搭建步骤</h2>
<p>只需按照教程步骤一步一步往下走，即可轻松搭建起一个美观优雅的静态博客网站。</p>
<h3 id="1-创建-github-pages">1. 创建 GitHub pages</h3>
<ol>
<li>注册 <a href="https://github.com/join">GitHub 账号</a>。</li>
<li>注册完成后，在个人主页界面中选择创建一个新的 repository（仓库）。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image.png" alt="create new repository" loading="lazy"></li>
<li>在 Create a new repository 页面，输入 Repository name（仓库名）。</li>
</ol>
<p>需要注意的是，Repository name 的格式需要设置为类似 <code>githubusername.github.io</code> 的形式。</p>
<p>举个例子，我的 GitHub 用户名为 binzeng001，所以我的 Repository name 就需要填写 binzeng001.github.io 。</p>
<p>接下来，选择 <strong>Public</strong>（公开模式），勾选 <strong>Add a README file</strong>，接着点击 <strong>Create repository</strong> 按钮。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-1.png" alt="Create repository" loading="lazy"></p>
<ol>
<li>创建成功后，点击 <strong>Settings</strong> 按钮。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-2-1024x181.png" alt="repository settings" width="1024" height="181" loading="lazy"></li>
<li>点击 Settings 页面左侧的 <strong>Pages</strong> 打开 GitHub Pages 设置页面。 然后选择使用 <strong>main</strong> 分支，点击 <strong>Save</strong> 保存。点击 <strong>Choose a theme</strong> 可以给刚创建好的 GitHub Pages 选择一个主题。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/GitHub-Pages-Settings-2048x1106.png" alt="GitHub Pages settings" loading="lazy"></li>
</ol>
<hr>
<h3 id="2-生成一个token">2. 生成一个Token</h3>
<ol>
<li>依次点击<strong>右上角个人头像</strong> &gt; <strong>Settings</strong> &gt; 左侧边栏的 <strong>Developer settings</strong> &gt; 左侧边栏的 <strong>Personal access tokens</strong>，然后点击右侧的 <strong>General net token</strong> 按钮。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-3.png" alt="Create a new token" loading="lazy"></li>
<li>在 Note 一栏，简单用文字描述此 token 的作用，设置好 token 的过期时间，并勾选 <strong>repo</strong>。然后滑动页面到最底端，点击 <strong>Generate token</strong> 按钮生成 token。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-5.png" alt="Configure token" loading="lazy"></li>
<li>token 生成好后，可以暂时先开着这个页面，等待会儿安装配置 Gridea 时再把 token 复制过去。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-4.png" alt="Copy token" loading="lazy"></li>
</ol>
<hr>
<h3 id="3-安装配置gridea">3. 安装配置Gridea</h3>
<ol>
<li>前往<a href="https://gridea.dev/#started">Gridea官网</a>下载适用于你电脑操作系统的 Gridea 安装包。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-6.png" alt="Choose your OS to download Gridea" loading="lazy"></li>
<li>下载完成后，将其安装到你的电脑上。初次打开 Gridea，界面是这个样子，非常简洁素雅：<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/2022-01-08_9-19-24.png" alt="Gridea主界面" loading="lazy"></li>
<li>点击 Gridea 左侧边栏的<strong>远程</strong>，在<strong>基础配置</strong>tab下，按照截图所示填写好配置信息，然后点击<strong>保存</strong>按钮：</li>
</ol>
<ul>
<li>域名：Github pages 对应的域名（例如：https://binzeng001.github.io 或自定义域名：e.g. https://blog.justwrite.top）</li>
<li>仓库：你的静态文件存放的仓库（例如：binzeng001.github.io）</li>
<li>分支：你的 GitHub Pages 对应的分支（例如：main）</li>
<li>用户名：仓库所属用户的用户名（你的 GitHub 账号的昵称）</li>
<li>邮箱：Git 推送时使用的邮箱（你的 GitHub 账号的邮箱）</li>
<li>Token: Git 推送时需要的 Token，用来向 GitHub 提交构建后的文件 <a href="https://github.com/settings/tokens">Github personal access tokens</a></li>
<li>CNAME: 可通过这个选项配置你自己的域名<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/2022-01-08_9-43-59.png" alt="Gridea基础设置" loading="lazy"></li>
</ul>
<ol start="4">
<li>随后点击底部<strong>检测远程连接</strong>，确认远程连接是否正常。</li>
<li>点击<strong>同步</strong>按钮，你的博客的静态页面就可以同步发布到 GitHub 上了，点击<strong>预览</strong>按钮，可以查看博客文章的预览效果。<br>
此外，你还可以通过 Gridea 来设置网站主题，网站名称，网站描述，添加GA跟踪代码等。</li>
</ol>
<p>接下来，你就可以在浏览器上输入前面步骤配置好的域名（e.g. https://bingzeng001.github.io）访问你的网站了。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/image-8-2048x1549.png" alt="Gridea静态网站初步搭建完成" loading="lazy"></p>
<hr>
<h3 id="4-配置自定义域名非必要步骤">4. 配置自定义域名（非必要步骤）</h3>
<p>如果你已经有注册自己的域名，那么你可以在 GitHub Pages 设置中配置自定义域名，并免费启用 HTTPS 。具体操作步骤如下：</p>
<ol>
<li>前往你的域名提供商网站后台，在 DNS 解析里新增一条类别为 CNAME 的解析记录。举个栗子，我选择使用子域名 blog.justwrite.top 这个子域名来访问这个 GitHub pages，那么我只需要通过 CNAME 的方式指向我前面创建的 GitHub pages 域名 binzeng001.github.io即可：<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/2022-01-08_10-43-18-2048x145.png" alt="添加DNS记录" loading="lazy"><br>
注：添加完成后需要等待 DNS 解析生效（DNS 的解析记录生效到全球可能需要几分钟时间）。</li>
<li>回到 GitHub pages 的 Settings 界面，在 <strong>Custom domain</strong> 下方填入刚才添加的子域名，e.g. blog.justwrite.top，勾选 <strong>Enforce HTTPS</strong>，点击 <strong>Save</strong> 按钮保存。</li>
</ol>
<p>保存后 GitHub 需要一定的时间生成证书并确认域名解析是否正常。成功后显示结果如下：<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/2022-01-08_11-04-10.png" alt="Add custom domain and enforce HTTPS" loading="lazy"><br>
3. 回到 Gridea，将基础配置中的域名部分，更新为刚才添加的自定义域名即可。<br>
1<a href="https://justwrite.top/wp-content/uploads/2022/01/2022-01-08_11-36-30-2048x1374.png">更新Gridea后台的域名</a><br>
4. 打开浏览器，输入自己注册的域名，会发现我们已经可以通过自定义的域名来访问这个静态博客网站了~<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AEGridea%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99.png" alt="大功告成" loading="lazy"></p>
<hr>
<blockquote>
<h2 id="使用体验">使用体验</h2>
<p>初步使用下来，感觉 GitHub + Gridea 搭建静态网站的使用体验还算不错，目前唯一的不足就是由于众所周知的原因，在 Gridea 后台同步文章到 GitHub时偶尔会抽风。</p>
</blockquote>
<p>如对本文内容有任何疑问，建议，欢迎在评论区讨论。😊</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu20.04+Nginx+PHP 7.4+MySQL搭建WordPress]]></title>
        <id>https://git.zblogs.top/post/ubuntu-nginx-php-mysql-build-wordpress-site/</id>
        <link href="https://git.zblogs.top/post/ubuntu-nginx-php-mysql-build-wordpress-site/">
        </link>
        <updated>2022-01-02T11:48:40.000Z</updated>
        <content type="html"><![CDATA[<p>最近看到腾讯云最近轻量应用服务器有活动，对新用户优惠力度比较大，遂花费38RMB买了一年的1核2G 50GB SSD轻量应用服务器练手，用于学习如何搭建WordPress网站。</p>
<p>这份文档将以Ubuntu Server 20.04 LTS 64bit操作系统为例，介绍如何从零开始搭建WordPress。</p>
<p>注： 腾讯云使用 Ubuntu 镜像创建的实例默认禁用 root 用户名通过密码的方式登录实例，可参考<a href="https://cloud.tencent.com/document/product/1207/44569#ubuntu-.E7.B3.BB.E7.BB.9F.E5.A6.82.E4.BD.95.E4.BD.BF.E7.94.A8-root-.E7.94.A8.E6.88.B7.E7.99.BB.E5.BD.95.E5.AE.9E.E4.BE.8B.EF.BC.9F">腾讯云官方教程</a>启用。</p>
<h2 id="准备工作">准备工作</h2>
<ul>
<li>Ubuntu 20.04</li>
<li>远程连接工具（Windows系统可用<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">Putty</a>；macOS系统直接用系统自带的终端app即可。）</li>
</ul>
<hr>
<h2 id="安装nginx">安装Nginx</h2>
<p>执行以下命令安装Nginx：</p>
<pre><code>apt install nginx
</code></pre>
<p>上述命令执行完毕后，浏览器访问你的服务器公网ip；若显示以下内容则证明安装成功：</p>
<pre><code>Welcome to nginx!

If you see this page, the nginx web server is successfully installed and working. Further configuration is required.

For online documentation and support please refer to nginx.org.
Commercial support is available at nginx.com.

Thank you for using nginx.
</code></pre>
<p>注：如果发现访问超时，请确保防火墙80端口已打开。</p>
<hr>
<h2 id="安装php及其扩展">安装PHP及其扩展</h2>
<p>执行以下命令安装PHP及其扩展：</p>
<pre><code>apt install php-fpm php-mysql php-gd php-curl php-dom php-mbstring php-imagick php-zip
</code></pre>
<hr>
<h2 id="安装mysql">安装MySQL</h2>
<ol>
<li>执行下面的命令安装 MySQL：</li>
</ol>
<pre><code>apt install mysql-server
</code></pre>
<ol start="2">
<li>安装完成后，接着执行：</li>
</ol>
<pre><code>mysql_secure_installation
</code></pre>
<p>如果显示：</p>
<pre><code>Securing the MySQL server deployment.

Enter password for user root:
</code></pre>
<p>如果在安装的时候设置过 root的密码，则输入密码后再按 Enter键，否则直接按 Enter键跳过即可。<br>
3. 接着安装程序将会询问是否需要设置验证密码组件：</p>
<pre><code>VALIDATE PASSWORD COMPONENT can be used to test passwords
and improve security. It checks the strength of password
and allows the users to set only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD component?

Press y|Y for Yes, any other key for No:
</code></pre>
<ol start="4">
<li>输入 y 然后按下 Enter；随后需要设置密码强度校验政策。这里根据个人的密码强度选择输入对应数字后按回车键即可。随后根据提示设置好root密码。</li>
</ol>
<pre><code>There are three levels of password validation policy:

LOW    Length &gt;= 8
MEDIUM Length &gt;= 8, numeric, mixed case, and special characters
STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file

Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG:
</code></pre>
<ol start="5">
<li>接下来，输入 y 然后按下 Enter，删除匿名用户：</li>
</ol>
<pre><code>By default, a MySQL installation has an anonymous user,
allowing anyone to log into MySQL without having to have
a user account created for them. This is intended only for
testing, and to make the installation go a bit smoother.
You should remove them before moving into a production
environment.

Remove anonymous users? (Press y|Y for Yes, any other key for No) :
</code></pre>
<ol start="6">
<li>继续输入 y 然后按下 Enter，禁止 root 远程登录：</li>
</ol>
<pre><code>Normally, root should only be allowed to connect from
'localhost'. This ensures that someone cannot guess at
the root password from the network.

Disallow root login remotely? (Press y|Y for Yes, any other key for No) :
</code></pre>
<ol start="7">
<li>再次输入 y 然后按下 Enter，删除测试数据库：</li>
</ol>
<pre><code>By default, MySQL comes with a database named 'test' that
anyone can access. This is also intended only for testing,
and should be removed before moving into a production
environment.


Remove test database and access to it? (Press y|Y for Yes, any other key for No) :
</code></pre>
<ol start="8">
<li>输入 y 然后按下 Enter，立即重新加载权限：</li>
</ol>
<pre><code>Reloading the privilege tables will ensure that all changes
made so far will take effect immediately.

Reload privilege tables now? (Press y|Y for Yes, any other key for No) :
</code></pre>
<p>进行到这一步，数据库初始化设置完成。<br>
9. 接下来，输入以下命令进入数据库：</p>
<pre><code>mysql -uroot -p
</code></pre>
<ol start="10">
<li>输入前面设置的 root 密码，然后按下 Enter。如果出现如下则证明成功进入数据库：</li>
</ol>
<pre><code>Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 10
Server version: 8.0.23-0ubuntu0.20.04.1 (Ubuntu)

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&gt;
</code></pre>
<ol start="11">
<li>接下来，输入下面的命令创建一个名为wordpress的数据库：</li>
</ol>
<pre><code>CREATE DATABASE IF NOT EXISTS wordpress DEFAULT CHARACTER SET = utf8mb4 DEFAULT COLLATE = utf8mb4_general_ci;
</code></pre>
<p>看到如下提示，则说明数据库创建成功：</p>
<pre><code>Query OK, 1 row affected (0.12 sec)
</code></pre>
<ol start="12">
<li>然后输入下面的命令创建一个数据库用户 wordpress 用来操作上面创建的 wordpress 数据库。你需要修改命令中的 {password} 为你自己的密码。</li>
</ol>
<pre><code>CREATE USER 'wordpress'@'localhost' IDENTIFIED BY '{password}';
</code></pre>
<ol start="13">
<li>接下来，执行下面这条命令，授予用户 wordpress 拥有数据库 wordpress 的所有权限：</li>
</ol>
<pre><code>GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'localhost' WITH GRANT OPTION;
</code></pre>
<ol start="14">
<li>随后输入下面的命令刷新权限：</li>
</ol>
<pre><code>FLUSH PRIVILEGES;
</code></pre>
<ol start="15">
<li>最后，退出数据库：</li>
</ol>
<pre><code>exit
</code></pre>
<hr>
<h2 id="下载wordpress安装程序">下载WordPress安装程序</h2>
<ol>
<li>通过以下命令下载最新版的WordPress中文版安装程序到路径 /var/www 中，下载文件命名为 <strong>wordpress.tar.gz</strong>:</li>
</ol>
<pre><code>curl https://cn.wordpress.org/latest-zh_CN.tar.gz -o /var/www/wordpress.tar.gz
</code></pre>
<ol start="2">
<li>进入 /var/www 文件夹：</li>
</ol>
<pre><code>cd /var/www
</code></pre>
<ol start="3">
<li>解压前面下载的 wordpress.tar.gz 到当前文件夹中：</li>
</ol>
<pre><code>tar -zxvf wordpress.tar.gz
</code></pre>
<ol start="4">
<li>修改文件夹用户组权限：</li>
</ol>
<pre><code>chown -R www-data:www-data /var/www/wordpress
</code></pre>
<hr>
<h2 id="修改nginx配置文件">修改Nginx配置文件</h2>
<p>接下来，需要修改Nginx配置文件。</p>
<ol>
<li>首先复制一份默认配置，并将下面命令中的 {domain} 更换为你自己的域名。</li>
</ol>
<pre><code>cp /etc/nginx/sites-available/default /etc/nginx/sites-available/{domain}.conf
</code></pre>
<ol start="2">
<li>接着使用Vim编辑器打开配置文件进行修改：</li>
</ol>
<pre><code>vi /etc/nginx/sites-available/{domain}.conf
</code></pre>
<p>注：如果提示 <code>bash: vi: command not found.</code> 则先通过下面的命令安装Vim，安装完成后再执行前面的命令修改配置。</p>
<pre><code>apt install vim
</code></pre>
<ol start="3">
<li>执行<code>vi /etc/nginx/sites-available/{domain}.conf</code> 打开配置文件后，按下键盘的<code>i</code>键进入编辑状态，将配置修改成如下，修改好后按<code>Esc</code>退出编辑状态，最后按下<code>:wq</code>保存修改并关闭配置文件。</li>
</ol>
<pre><code>server {
  listen 80;
  listen [::]:80;
 
  root /var/www/wordpress;
  index index.php;
 
  server_name {you-domain};
 
  location / {
    try_files $uri $uri/ =404;
  }
 
  location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
  }
}
</code></pre>
<p>注：如果没有使用域名，则无需修改配置文件内的 server_name 字段。其中配置文件内 fastcgi_pass 这一项中的 php7.4-fpm.sock 对应的是php-fpm版本。</p>
<p>本文安装的是 PHP 7.4，在修改配置时请记得替换成你们安装的版本。如果不确定自己安装的PHP是什么版本，可通过 php -v 命令查看服务器安装的对应PHP版本。</p>
<ol start="4">
<li>接下来，删除正在使用的默认配置：</li>
</ol>
<pre><code>rm /etc/nginx/sites-enabled/default
</code></pre>
<ol start="5">
<li>然后将修改好的配置加入到正在使用的配置中：</li>
</ol>
<pre><code>ln -s /etc/nginx/sites-available/{domain}.conf /etc/nginx/sites-enabled/
</code></pre>
<ol start="6">
<li>测试配置是否正确：</li>
</ol>
<pre><code>nginx -t
</code></pre>
<p>如果出现如下信息则代表配置成功：</p>
<pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</code></pre>
<ol start="7">
<li>重载配置以生效：</li>
</ol>
<pre><code>nginx -s reload
</code></pre>
<h2 id="浏览器引导安装wordpress">浏览器引导安装WordPress</h2>
<p>以上所有步骤执行完毕后，回到浏览器访问服务器公网ip，将会看到WordPress欢迎页面。点击“下方现在就开始！”按钮继续。<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/WordPress-setup-config.php_.png" alt="wordpress setup config" width="600" height="451" loading="lazy"><br>
在下一个界面中，将用户名修改为<strong>wordpress</strong>，密码一栏填入刚才设置的数据库密码，然后点击提交即可。</p>
<p>随后，你将会看到WordPress成功安装的页面：<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/WordPress%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85.png" alt="wordpress installation complete" width="600" height="337" loading="lazy"></p>
<p><em>由于本文篇幅过长，给网站部署HTTPS的步骤我将会开一篇新的文章详细介绍。</em></p>
<hr>
<blockquote>
<h2 id="小尾巴~">小尾巴~</h2>
<p>这份文档并非凭我一己之力完成；在发布此文档前，本人参考了网上许多建站教程，发现对小白用户来说都不是很友好，操作过程中也踩了不少坑。<br>
在此，我想感谢公司帅气又nice的Nico对此教程的细致反馈与审阅。如果没有他的帮助，就不会有这篇文章的存在。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[For River, To The Moon —— 《去月球》玩后感]]></title>
        <id>https://git.zblogs.top/post/broken-thoughts-after-playing-to-the-moon/</id>
        <link href="https://git.zblogs.top/post/broken-thoughts-after-playing-to-the-moon/">
        </link>
        <updated>2021-03-31T11:32:26.000Z</updated>
        <content type="html"><![CDATA[<p>我花了大概四小时通关《去月球》这款与众不同的游戏。如果要我在不剧透的前提下用一句简短的话描述这个游戏，那就是：</p>
<blockquote>
<p>像素风的游戏画面，奥斯卡金像奖级别的剧情，叙事和配乐。</p>
</blockquote>
<p>这应该是第一个让我玩得又想哭又忍不住笑的游戏。玩到最后的玩家，真的很容易被这游戏的剧本和配乐所打动，并有所感悟和收获。</p>
<p>有人玩下来觉得它是一个美好外壳下的悲剧；也有人认为这游戏其实讲的是一个包裹在残酷外表下的温情故事。</p>
<p>这游戏在我看来虽然操作上略微繁琐，几乎没啥游戏性可言，但我觉得这游戏的剧情，配乐以及所蕴含的人文内核，足以弥补游戏性上的不足。如果满分是10分的话，我认为这游戏可以给10分了。</p>
<p>最后，分享一下 To The Moon 的游戏原声带:<br>
<img src="https://justwrite.top/wp-content/uploads/2022/01/to-the-moon-%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%A3%B0%E5%B8%A6-QQ%E9%9F%B3%E4%B9%90.jpg" alt="QQ音乐 To The Moon 游戏原声带" width="300" height="500" loading="lazy"></p>
<figure data-type="image" tabindex="1"><img src="https://justwrite.top/wp-content/uploads/2022/01/to-the-moon-%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%A3%B0%E5%B8%A6-%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-scaled.jpg" alt="网易云音乐 To The Moon 游戏原声带" width="300" height="730" loading="lazy"></figure>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://git.zblogs.top/post/about/</id>
        <link href="https://git.zblogs.top/post/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<p>本站是 <a href="https://zblogs.top">https://zblogs.top</a> 的备份站点。</p>
<h2 id="博主是谁">👨‍💻 博主是谁</h2>
<p>Justin（小贾）</p>
<h2 id="兴趣爱好">⛹ 兴趣爱好</h2>
<p>看书，羽毛球，爬山，玩游戏</p>
<h2 id="联系我呀">📬 联系我呀</h2>
<p><a href="https://zblogs.top">https://zblogs.top</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[破碎故事之心 - 试译]]></title>
        <id>https://git.zblogs.top/post/the-heart-of-a-broken-story-chinese-translation/</id>
        <link href="https://git.zblogs.top/post/the-heart-of-a-broken-story-chinese-translation/">
        </link>
        <updated>2017-06-04T10:59:02.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h2 id="百度百科">百度百科</h2>
<p>《破碎故事之心》是美国作家杰罗姆·大卫·塞林格所创作的短篇小说。故事戏仿当时的浪漫小说和流行的警匪片，讽刺了商业杂志推销。</p>
</blockquote>
<p>贾斯汀·霍根施拉格是一个周薪30美元的印刷小工。每天都有六十几个与他素未谋面的女子从他眼前经过。因此，在纽约的这几年间，他见到过大概75,120个不同相貌的女子。在这75,120个女子中，年纪在二三十岁的女子有25,000个左右。在这25,000个年轻女子中，只有5,000个女子称得上体态轻盈（体重保持在100斤左右）。而在这5,000个女子中，撇去长得难看的女子，就只剩下1000人。</p>
<p>只有500个女子面容姣好；在这500个女子中，只有100人算得上妩媚动人；仅有25个女子的容颜能够引来一阵漫长且缓慢的口哨声。而只有一个女子让霍根施拉格一见钟情。</p>
<p>世上有两种蛇蝎美人：其中一种蛇蝎美人无论从哪方面看都是蛇蝎美人，另一种蛇蝎美人则不像前一种那么完美无瑕。</p>
<p>她的名字叫雪莉·莱斯特，芳龄二十（比霍根施拉格小十一岁），身高五英尺四英寸，（她的头刚好够到他的眼睛），体重117磅（轻如羽毛）。雪莉是一个速记员，她的母亲和她住在一起，由她赡养，名为艾格尼丝·莱斯特，是一个老纳尔逊•艾迪的粉丝。提到雪莉的长相，人们通常会这样说：“雪莉就像是从美人画像中走出来的一样”。</p>
<p>一天清早，在第三大道公交车上，霍根施拉格站在雪莉·莱斯特身后默默注视着她，他这副穷屌样一看就知道注定要失败。这一切都是因为雪莉的嘴以一种她所特有的方式张开着。雪莉正在读着公交车侧壁的一则化妆品广告；在她读的时候，她的下巴微微放松。在那一瞬间，她的小嘴略张，双唇微启，此时的她可能是在整个曼哈顿最具致命诱惑的女人。在霍根施拉格眼中，雪莉宛如一剂可以治愈孤独的灵丹妙药。自从他来到纽约后，孤独就像一只巨大的野兽在他的心中肆虐。哦，这简直是极大的痛苦！站在雪莉身后却不能俯身亲吻雪莉微微分开的唇瓣。这痛苦简直难以言表！</p>
<hr>
<p>以上文字是我准备在《科利尔周刊》上写的一个故事的开头。当时我正打算写一个浪漫深情的爱情故事。我觉得这会更好些。这个世界需要爱情故事。但不巧的是，若真要写好一个爱情故事，作者必须要先处理好怎样才能让男孩结识女孩这一问题。然而上面这个故事我处理不好，因为这似乎有些不合情理，我不知道要以一种怎样合适的方式才能让霍根施拉格结识雪莉。原因如下：</p>
<p>显然霍根施拉格不可能俯身真诚地对雪莉说下面这些话：</p>
<p>“对不起。我真的很爱你。我很清楚自己迷恋上你了。我会用一生的时间来爱你。我是一个印刷小工，我每个礼拜可以挣30美元。天哪，我怎么就爱上你了！你今晚有空吗？”</p>
<p>这个霍根施拉格也许是一个傻子，但也不至于那么傻。他也许在过去有这么蠢，但现在应该不会蠢到这种地步。你别指望《科利尔周刊》的读者会为那种情节狗血的爱情故事买单。毕竟人家可是花了钱的。</p>
<p>当然，我不能突然给霍根施拉格来一剂由威廉·鲍威尔的旧烟盒和弗雷德·阿斯泰尔的旧高顶礼帽调和而成的血清，让他瞬间变得像他们两个人那样温文尔雅。</p>
<p>“请别误会我了，小姐。我是一家杂志的插画师。这是我的名片。我这辈子从没像现在这样如此渴望为一个人画素描。但我真的很想为你画一幅。或许这项工作对我们彼此都有好处。我可以在今晚给你打电话吗，如果你今晚没时间，我可以在不久的将来打给你吗？（一阵短促，风流倜傥的笑声。）我希望我听起来不会让你觉得我急不可耐。（再次大笑）我想我的确如此，真的。”</p>
<p>好家伙！上面那些话在说的时候还伴随着一个疲倦，愉悦，无邪的微笑。要是霍根施拉格真的说了那些话那该有多好啊！雪莉，和她母亲一样，当然也是老纳尔逊·艾迪的粉丝，同时她还是基石流通图书馆的活跃会员。</p>
<p>你也许开始意识到我之前在构思这个爱情故事时面临的棘手问题了吧。</p>
<p>是的，霍根施拉格可能会这么说：</p>
<p>“打扰一下，你难道不是威尔玛·普里查德吗？”</p>
<p>雪莉听后可能会一边冷漠地回复，一边往公交车的另一边寻找一个不受打扰的立足点。</p>
<p>“不是”</p>
<p>“这就奇怪了，” 霍根施拉格会接着说下去，“我刚刚还很一直以为你就是威尔玛·普里查德。额，你难道不是从自西雅图来的？”</p>
<p>“不是。”——这回答比上一句还更冷。</p>
<p>“我家乡在西雅图。”</p>
<p>沉默不语。</p>
<p>“很棒的一个小城市，西雅图。我是说它真的是一个很棒的小城市。我到这里——我是说纽约——才四年。我是一个印刷小工。霍根施拉格是我的名字。”</p>
<p>“我真的一点兴趣也没——有。”</p>
<p>哦，霍根施拉格甭想指望用这种开场白勾搭上雪莉。在这种场合下，他既没有俊朗外表和人格魅力，也没有华丽服饰，他根本不可能引起雪莉的注意。他连一丝机会也没有。而且，我之前说过，要写一个非常出色的爱情故事，最好让男孩结识女孩。</p>
<p>也许霍根施拉格听完雪莉冰冷的回复后晕了过去，在晕倒时他试着抓住一点什么来支撑自己：他抓住了雪莉的脚踝。他可能撕破了人家的长筒袜，说不定还成功地在长筒袜上面点缀出一道纤长的抽丝线。 公交车上的乘客们可能会为受挫的霍根施拉格挪出空间，而他会站起身来，含含糊糊地说：“我没事，谢谢，” 接着说，“哦，哎呀，实在是抱歉，小姐，我把你的长筒袜撕破了。你一定要让我赔钱给你。我虽然现在身上没有现金，但你只管把你的住址告诉我就行了，我改天送过去。”</p>
<p>雪莉肯定不会把自己的住址告诉他。她只会感到尴尬，而且不知道要说什么好。 “算了吧，” 她嘴上或许会这样说，心里却恨不得霍根施拉格从此在她眼前消失。除此之外，这个故事的整体构思也不合逻辑。霍根施拉格，这个来自西雅图的小伙子，做梦都不会想过要去抓住雪莉的脚踝。至少这种事不会发生在第三大道的公交车上。</p>
<p>但霍根施拉格可能会铤而走险，这更符合逻辑。这个世上还有一些人为了得到爱而不顾一切。或许霍根施拉格就是其中一个。他可能会一把夺过雪莉的手提包准备从最近的车门夺门而出。雪莉尖叫起来。乘客们听到她的尖叫后，脑海中浮现出电影《阿拉莫之战》之类的场景。霍根施拉格并没有成功逃走，换句话说，他现在被捕了。公交车停了下来。威尔逊巡警——他在很长一段时间都没逮捕到什么人了——在作案现场询问情况。这里刚刚发生了什么事？警官，这个人想要偷我的钱包。</p>
<p>巡警将霍根施拉格提交法庭。雪莉，当然，必须要在开庭时出席。他们双方都上报了自己的住址；所以，霍根施拉格得知了雪莉的住址。</p>
<p>法官柏金斯先生——他甚至从没在他自己家里喝过一杯上好的咖啡——判处霍根施拉格入狱服刑一年。雪莉咬了咬她的嘴唇，而霍根施拉格被带走了。</p>
<p>在监狱里，霍根施拉格写了下面一封信给雪莉·莱斯特：</p>
<blockquote>
<p>“亲爱的莱斯特小姐：</p>
<p>“我并不是故意要偷你的钱包。我之所以这样做，是因为我爱你。我只是想认识你。你在有空的时候可以写一封信给我吗？我在这里很孤单，我非常爱你，如果你有空的话，或许你可以找个时间来看看我。</p>
<p>你的朋友，<br>
贾斯汀·霍根施拉格<br>
雪莉把这封信给了她所有的朋友看。她们说：“啊，这挺可爱的，雪莉。” 雪莉也觉得这种做法在某种程度上的确有几分可爱。或许她会回信。“对！回信给他。给他一次机会。反正你也不会损失什么。” 所以雪莉回了霍根施拉格的信。</p>
</blockquote>
<blockquote>
<p>“尊敬的霍根施拉格先生：</p>
<p>我已收到你的来信。对之前所发生的一切，我真的很抱歉。遗憾的是，事到如今，我们也无能为力了，得知这整个事件的转折后，我的心情也很糟糕。不过，你服刑期短，你应该很快就能刑满释放的。祝你好运！</p>
<p>谨启，<br>
雪莉·莱斯特</p>
</blockquote>
<blockquote>
<p>“亲爱的莱斯特小姐：</p>
<p>你肯定想象不到当我收到你的来信时我是多么的欣喜若狂。你完全不必感到难过。错全在我，要怪就只能怪我自己当时如此疯狂，所以你别难过了。在监狱里，我们每个礼拜都可以看一次电影，这真的不错。我今年31岁，来自西雅图。我到纽约已经有四年了，然而只有在我感到十分孤单的时候，我才会觉得纽约是一个很棒的城市。你是我见过的最漂亮的女子了，即使是在西雅图，你也可以说得上是最漂亮的。我希望你能够在某个周六下午抽空来看我。我的探视时间在每周六下午两点到四点。我会付你火车票钱。</p>
<p>你的朋友，<br>
贾斯汀·霍根施拉格</p>
</blockquote>
<p>雪莉可能也会把这封信给她所有的朋友看。但是她不会回信了。任何人都能看出来，这个霍根施拉格是个笨蛋。说白了就是这么一回事。她已经回过上一封信了。要是她再回这封可笑的信，她和那个霍根施拉格肯定还得纠缠数月，而她恨不得马上和霍根施拉格撇清关系。雪莉已经对他仁至义尽了。还有，“霍根施拉格”，怎么会有人叫这种名字。</p>
<p>与此同时，即使犯人们每周可以看一次电影，霍根施拉格在监狱里仍备受煎熬。他的两个后室的牢友，一个叫斯奈普·摩根，另一个叫斯利瑟·伯克，他们两个家伙觉得霍根施拉格与芝加哥那个害他们两人锒铛入狱的家伙长得一模一样。</p>
<p>他们确信，那个阴脸卑鄙的费雷罗和霍根施拉格是同一个人。</p>
<p>“但我真的不是那个阴脸卑鄙的费雷罗，” 霍根施拉格告诉他们说。</p>
<p>“别跟我来这套，” 斯利瑟一边说，一边随手把霍根施拉格仅有的一点食物打翻在地。</p>
<p>“砸扁他的脑袋，” 斯奈普附和道。</p>
<p>“我老实告诉你们吧，我之所以进监狱是因为我在第三大道的公交车上偷了一个女孩的钱包，” 霍根施拉格乞求道，“只不过我并不是真的要偷她的钱包。我爱上她了，只有这样做我才有可能认识她。”</p>
<p>“别跟我来这套，” 斯利瑟说。</p>
<p>“砸扁他的脑袋，” 斯奈普附和道。</p>
<p>然后有一天，这十七个囚犯试图越狱。在自由活动期间，斯利瑟·伯克在操场上把监狱长的侄女——年仅八岁的莉斯贝思·苏——哄骗到自己的掌心之中。他用他那双大手揽在小女孩的腰间，随即把她高高举起，好让监狱长看见。</p>
<p>“嘿，监狱长！” 斯利瑟大喊道，“快把监狱的大门打开，不然我就杀了这个小孩！”</p>
<p>“我不怕，伯特叔叔！” 莉斯贝思·苏大叫说。</p>
<p>“斯利瑟，放下那个小孩！” 监狱长底气不足地命令道。</p>
<p>但斯利瑟知道自己已经抓住了监狱长的把柄。十七名囚犯和一个金发小孩走出了监狱大门。只有十六名囚犯和一个金发小孩安全地走了出去。在高塔上的一个警卫觉得自己找到了一个绝佳的机会将斯利瑟一枪爆头，于是就扣动了扳机。枪声打乱了越狱队伍的整齐队形。然而他失手了，子弹只打中了一名胆怯跟在斯利瑟身后的小个子囚犯，他当场被击毙。</p>
<p>你猜打死了谁？</p>
<p>因此，我那原先计划给《科利尔周刊》写的爱情故事，一个浪漫深情、刻骨铭心的爱情故事，就因为我的英雄之死而破产了。</p>
<p>好吧，只要雪莉给他回第二封信，或许霍根施拉格就不会铤而走险，也不会感到焦虑不安，最后也绝不会成为那十七个绝命亡徒中的一员。但雪莉没回他的第二封信，这个事实依旧没变。就算霍根施拉格等上一百年，雪莉也不会给他回信。我无法改变这一事实。</p>
<p>真是太遗憾了。要是霍根施拉格在监狱里能给雪莉·莱斯特写下面这一封信就好了：</p>
<blockquote>
<p>“亲爱的莱斯特小姐：</p>
<p>“但愿你在看到我的这些话时既不会感到心烦，也不会觉得尴尬。莱斯特小姐，我之所以写这封信，是因我想让你知道，我并非你印象中的那种小偷。我想让你知道，我拿你的包，是因为我在公交车看到你的第一眼起就爱上你了。准确说来，除了做出这种轻率鲁莽、愚蠢之至的举动外，我想不出其它法子来认识你。可是你也知道，当一个人陷入爱河时，总是会表现得像傻瓜一样疯狂。</p>
<p>“我爱看你双唇微启的样子。看到你，我仿佛看到了整个世界。自从四年前我来到纽约起，我没有一天过得不开心，但我也没有一天开心过。确切地说，我和那成千上万的纽约年轻人没什么两样，只是简单“存在”着。</p>
<p>“我从西雅图来到纽约。当时我想，终有一天，我也会腰缠万贯，功成名就，我也能身着西装革履，举止温文尔雅。然而，在这四年间，我认识到，自己既不会腰缠万贯，功成名就，也不能身着西装革履，举止温文尔雅。我是一个能干的印刷小工，仅此而已。有一天印刷员病了，我就得接手他的工作。莱斯特小姐，我总是把事情搞得一团糟。没人愿意听我指挥。当我告诉那些打字员要开始工作时，他们只是一笑而过。我并不会责备他们。当我发号施令时，我就像是一个傻瓜。我只不过是那数百个从没想过要发号施令的人之一。但是，我再也不会对此耿耿于怀。我的老板刚刚雇了一个二十三岁的小伙子。他现在才二十三岁；而我呢，我做印刷小工已经做了四年了。但我知道，那个年轻小伙会成为印刷员的主管，而我将会成为他的印刷小工。即使知道这些，我也不再耿耿于怀了。</p>
<p>“对我来说，爱你才是重要的，莱斯特小姐。有些人认为爱是性，是婚姻，是清晨六点钟的吻，是一群孩子。也许是这样吧，莱斯特小姐。但你知道我是怎么想的吗？我认为，爱是那种手还未触碰，却已怦然心动的感觉。</p>
<p>“我想，对于女人来说，嫁给一个在外人看来或富裕，或英俊，或机智幽默，或受人欢迎的男人，这是很重要的。而我连受欢迎都谈不上，人们对我不屑一顾。我只是——我只是——贾斯汀·霍根施拉格。我从没给他人带来什么乐趣，也没让人伤心，恼怒，甚至厌恶。我想，人们会把我当作是一个好人，但仅此而已。</p>
<p>“在我小时候，从没有人夸过我可爱，聪明或是好看。如果他们不得已，非得说些什么的时候，他们会夸我有着一双粗短的腿。</p>
<p>“我不指望你回复这封信，莱斯特小姐。虽然你的回信是我这世上最想要的东西。但真的，我不会指望你能给我写一封。我只是想让你知道实情。如果我对你的爱到头来只会让我陷入巨大的悲伤，那只能怪我自己。</p>
<p>“也许终有一天你会理解我的所作所为，并原谅我这个拙笨的追求者。</p>
<p>贾斯汀·霍根施拉格</p>
</blockquote>
<p>雪莉也不太可能会回复下面这一封信：</p>
<blockquote>
<p>尊敬的霍根施拉格先生：</p>
<p>“我已收到你给我写的信，并对此爱不释手。我实在没想到事情会变成这样，我心里很愧疚，也很痛苦。要是你当时别抢我的包，而是把你想对我说的直接告诉我，那该多好啊！但如果你真的那么做，我想我应该还是只会冷冰冰地回复你。</p>
<p>“现在是午餐时间，我一个人孤零零地坐在办公室给你回信。我今天中午想一个人待着。我觉得，如果我要和那群女同事们一起去自助餐厅吃午饭的话，她们又会像平常那样在吃饭的时候叽里咕噜说个不停。我会受不了她们并尖叫起来的。</p>
<p>“我不在意你是否事业成功，也不在意你是否相貌堂堂、名利双收或温文尔雅。</p>
<p>“我以前是在意这些的。在我读高中的时候，我总是和那些有极具魅力的男孩谈恋爱。比如说唐纳德·尼克尔森，他喜欢在雨中漫步，并且对莎士比亚的十四行诗了如指掌。鲍勃·拉塞，一个帅气的家伙，当篮球比赛胜负难分时，他能在最后一刻从中线将球投进篮中。哈利·米勒，一个腼腆的男孩，他有着一双迷人耐看的棕色眼睛。</p>
<p>“但我生命中那段激情燃烧的岁月已经结束了。</p>
<p>“你办公室那些曾对你的发号施令一笑而过的人，现在已被我列入黑名单了。我对这种人恨之入骨。</p>
<p>“你在公交车上看到的我其实是我精心打扮过的样子。请相信我，如果我把妆都卸掉，我根本就算不上漂亮。在你可以接受访客的时候请务必写信告诉我。我想让你看一看我卸妆后的样子。我想确认一下，你并没有被我精心打扮后的容颜迷惑。</p>
<p>“哦，我真希望你当时把偷我钱包的动机告诉法官！这样的话，我想我们也许就能在一起了，我们就可以畅谈彼此间所有的共通之处。</p>
<p>“当我可以来看你的时候请写信告诉我。</p>
<p>你真诚的，<br>
雪莉·莱斯特</p>
</blockquote>
<p>但是贾斯汀·霍根施拉格至始至终都没了解过雪莉·莱斯特。她在第56大街下车，而他，则是在第32大街下车。那天晚上，她和霍华德·劳伦斯一起去了看电影。雪莉迷恋上了霍华德，霍华德则觉得雪莉很够朋友，但仅此而已。而贾斯汀·霍根施拉格那天晚上在做什么呢？他窝在家里听了一晚上的力士香皂播送的广播剧。他一晚上满脑子都是雪莉·莱斯特，第二天一整天也是，那个月，他也频频想起她。然后有一天，有人向他介绍了一个名叫多莉丝·希尔曼的姑娘。而这姑娘已经开始担心自己嫁不出去了。然后，在贾斯汀·霍根施拉格不知不觉中，多莉丝·希尔曼和其他一些事情已经让他把雪莉·莱斯特抛之脑后了。而雪莉·莱斯特，及对她的一丝念想，已经在·霍根施拉格的脑中消失得无影无踪了。</p>
<p>以上，就是我从未给《科利尔周刊》写过一个爱情故事的原因。因为按照爱情故事的套路，男孩是一定要与女孩相识的。|||</p>
]]></content>
    </entry>
</feed>